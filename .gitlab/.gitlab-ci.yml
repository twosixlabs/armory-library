image: "python:3.8-slim-bullseye"

stages:
  - "ðŸ“¡ Code Linting"
  - "ðŸš§ Static Analysis"
  - "ðŸ§ª Unit Tests"
  - "ðŸ“– Generate Docs"
  - "ðŸ”¨ Build"
  # - "ðŸš€ Deploy"  # TODO: Add deploy stage for Advana target; e.g. package, container, etc. -CW

variables:
  LC_ALL: "C.UTF-8"
  LANG: "C.UTF-8"
  DEBIAN_FRONTEND: noninteractive
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip"
  PYTHON_VENV_DIR: "$CI_PROJECT_DIR/venv"
  ARMORY_CI_TEST: 1
  PYTEST_PARAMS: >-
    --exitfirst
    --suppress-no-test-exit-code

cache: &global_cache
  key: shared-job-key
  policy: pull-push
  untracked: true
  paths:
    - $PIP_CACHE_DIR


before_script:
  - apt-get update -qqy
  - apt-get install -qqy --no-install-recommends --no-install-suggests git libgl1-mesa-glx gnupg build-essential rsync make software-properties-common
  - python -m pip install --upgrade pip build wheel


code-linting:
  stage: "ðŸ“¡ Code Linting"
  only:
    - merge_requests
  script:
    - pip install isort black flake8
    - make lint


static_analysis:
  stage: "ðŸš§ Static Analysis"
  artifacts:
    paths:
      - bandit_scan.txt
    expire_in: 6 hours
    when: on_success
  allow_failure: true
  dependencies:
    - code-linting
  only:
    - merge_requests
  script:
    - pip install bandit mypy
    - make scan


unit-test:
  stage: "ðŸ§ª Unit Tests"
  dependencies:
    - code-linting
  only:
    - jatic
    - merge_requests
  script:
    - make install
    - make test


pages:
  stage: "ðŸ“– Generate Docs"
  artifacts:
    paths:
      - public
  dependencies:
    - code-linting
    - unit-test
  only:
    - jatic
    - merge_requests
  script:
    - pip install mkdocs mkdocstrings mkdocs-exclude mkdocs-material
    - make docs


build:
  stage: "ðŸ”¨ Build"
  artifacts:
    paths:
      - dist/*.whl
  dependencies:
    - code-linting
    - unit-test
  only:
    - jatic
    - merge_requests
  script:
    - make install
    - make build
    # TODO: Add build for Advana target; e.g. package, container, etc. -CW
    # - make docker
