image: "ubuntu:latest"

stages:
  - "👽 Setup"
  - "📡 Code Linting"
  - "🚧 Static Analysis"
  - "🧪 Unit Tests"
  - "📖 Generate Docs"
  - "🔨 Build"
  # - "🚀 Deploy"  # TODO: Add deploy stage for Advana target; e.g. package, container, etc. -CW

variables:
  ARMORY_CI_TEST: 1
  DEBIAN_FRONTEND: noninteractive
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PYTHON_VENV_DIR: "$CI_PROJECT_DIR/.cache/venv"
  PYTEST_PARAMS: >-
    --exitfirst
    --suppress-no-test-exit-code

cache: &global_cache
  key: shared-job-key
  policy: pull-push
  untracked: true
  paths:
    - $PYTHON_VENV_DIR
    - $PIP_CACHE_DIR


before_script:
  - apt-get update -qy
  # Needed by pycocotools
  - apt-get install -qqy --no-install-recommends --no-install-suggests build-essential
  # Needed by versioning and linting scripts
  - apt-get install -qqy --no-install-recommends --no-install-suggests git
  # Needed for OpenCV
  - apt install -qqy --no-install-recommends --no-install-suggests libgl1-mesa-glx
  # Base requirements
  - apt-get install -qqy --no-install-recommends --no-install-suggests gnupg software-properties-common
  - add-apt-repository -y ppa:deadsnakes/ppa
  - apt-get update -qy
  - apt-get install -qqy --no-install-recommends --no-install-suggests python3.9 python3.9-dev python3.9-venv python3-pip
  - ln -sf /usr/bin/python3.9 /usr/bin/python3
  - ln -sf /usr/bin/pip3.9 /usr/bin/pip3
  - '[[ -d "${PYTHON_VENV_DIR}" ]] && source "${PYTHON_VENV_DIR}/bin/activate"'


setup:
  stage: "👽 Setup"
  when: on_success
  only:
    - merge_requests
  script:
    - make install


code-linting:
  stage: "📡 Code Linting"
  dependencies:
    - setup
  only:
    - merge_requests
  script:
    - make lint


static_analysis:
  stage: "🚧 Static Analysis"
  allow_failure: true
  dependencies:
    - setup
    - code-linting
  only:
    - merge_requests
  script:
    - make scan


unit-test:
  stage: "🧪 Unit Tests"
  allow_failure: true # Just until we get the tests working fully.
  dependencies:
    - setup
    - code-linting
  only:
    - merge_requests
  script:
    - make test


pages:
  stage: "📖 Generate Docs"
  artifacts:
    paths:
      - public
  dependencies:
    - setup
    - code-linting
    - unit-test
  only:
    - jatic
    - merge_requests
  script:
    - make docs


build:
  stage: "🔨 Build"
  artifacts:
    paths:
      - dist/*.whl
  dependencies:
    - setup
    - code-linting
    - unit-test
  only:
    - jatic
    - merge_requests
  script:
    - make build
