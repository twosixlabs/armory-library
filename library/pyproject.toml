[project]
requires-python = ">=3.8"

name = "armory-library"
description = "TwoSix Armory Adversarial Robustness Evaluation Library"
readme = "README.md"
dynamic = ["version"]
license = "MIT"
authors = [{ name = "Two Six Technologies", email = "armory@twosixtech.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
]

# Core dependencies required for general use of Armory
dependencies = [
    "jsonpath-ng",
    "lightning",
    "loguru",
    "mlflow",
    "numpy",
    "Pillow",
    "torch",
    "torchmetrics",
    "torchvision",
    "tqdm",

    # an ugly hack to workaround a bug on MacOS which makes PyYAML 5.4.1 unbuildable
    # lightning 2.1.2 requires PyYAML >= 5.4 < 8.0 which on MacOS under Python 3.11
    # somehow resolves to 5.4.1 which doesn't build. Let's try forcing a version
    # and see if it helps. I'd like to do this as a constraints.txt entry but
    # constraints and --editable are mutually exclusive.
    "PyYAML >= 6",

    # Temporary workaround since ART imports pkg_resources.packaging but
    # setuptools 70.0.0 removed that module from pkg_resources
    "setuptools<70.0.0",
]


# Dependencies that aren't required for general use of Armory, but may be
# required according to the specific Armory capabilities being used.
[project.optional-dependencies]
extras = [
    "adversarial-robustness-toolbox",
    "albumentations",
    "captum",
    "matplotlib",
    "pandas",
    "tidecv",
    "transformers",
    "xaitk-saliency",
]


[project.urls]
Homepage = "https://github.com/twosixlabs/armory-library"
BugTracker = "https://github.com/twosixlabs/armory-library/issues"
Documentation = "https://armory-library.readthedocs.io/en/latest/"


[project.scripts]
armory-mlflow-server = "armory.track:server"


[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]


[tool.hatch.build]
ignore-vcs = false
reproducible = true
directory = "dist"
sources = ["src"]
include = ["src/", "LICENSE", "pyproject.toml", "README.md"]


[tool.hatch.metadata]
allow-direct-references = true


[tool.hatch.version]
source = "vcs"
path = "src/armory/version.py"


[tool.hatch.version.raw-options]
root = "../"
version_scheme = "post-release"


[tool.hatch.build.hooks.vcs]
version-file = "src/armory/version.py"
template = """
# coding: utf-8
# File automatically generated by setuptools_scm.
# Do not change or track in version control.
__version__ = {version!r}
version_tuple = {version_tuple!r}
"""


# Tools
[tool.setuptools_scm]
# the presence of this empty block stops setuptools_scm from complaining


[tool.taskipy.tasks]
test = "python -m pytest -m unit"
