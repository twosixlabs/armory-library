ARG base_image_tag
ARG armory_version
ARG armory_build_type


FROM twosixarmory/base:${base_image_tag} as armory-local

WORKDIR /armory-repo

COPY pyproject.toml setup.py pytest.ini /armory-repo/
COPY ./.git /armory-repo/.git
COPY ./armory /armory-repo/armory/
COPY ./tests /armory-repo/tests/
COPY ./scenario_configs /armory-repo/scenario_configs/


# NOTE: installed after pip installs in base container,
#       but doesn't seem to cause issues at the moment
#       pip install librosa does not install sndfile dependency
RUN /opt/conda/bin/conda install -c conda-forge librosa && \

    echo "Installing ART" && \
    /opt/conda/bin/pip install --no-cache-dir adversarial-robustness-toolbox==1.10.3 && \

    echo "Updating Base Image"            && \
    pip install hatch hatch-vcs           && \
    python -m pip install --upgrade pip   && \

    echo "Building Armory from local source" && \
    # Currently ALL versioning methods rely on the `.git` directory being
    # present. Alternatively, one could patch `pyproject.toml` to use
    # `__about__.py` in the local armory directory.
    # sed -i 's/source = "vcs"/#source = "vcs"/g' pyproject.toml  && \
    pip install --no-cache-dir --no-compile '.[host]' && \
    armory configure --use-default

WORKDIR /workspace


# ------------------------------------------------------------------
# DEVELOPER NOTES:
# ------------------------------------------------------------------
# TODO: determine if this environment setup is needed
#  $ ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/cuda/lib64"

# NOTE:
#  - pytorch-lightning >= 1.5.0 will break Deep Speech 2
#  - torchmetrics >= 0.8.0 will break pytorch-lightning 1.4
#  - hydra-lightning installs omegaconf
#  - google-cloud-storage needed for checkpoint.py import
#  - only sox python bindings are installed; underlying sox binaries not needed

# NOTE: Listed dependencies of PyTorch Deep Speech 2, but do not appear
#       to be used for inference (only for training), they are not installed:
#         - torchelastic
#         - wget
#         - flask
#         - fairscale
# ------------------------------------------------------------------
