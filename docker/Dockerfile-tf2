ARG base_image_tag
ARG armory_version
ARG armory_build_type


FROM twosixarmory/base:${base_image_tag} as armory-base

# This section installs tensorflow object detection API from
# https://github.com/tensorflow/models/blob/79354e14a4b41ff9019f4a5ebd12cfa498917182/research/object_detection/packages/tf2/setup.py
WORKDIR /tmp/models/research

RUN git clone https://github.com/tensorflow/models.git                  && \
      cd models/research                                                && \
      git checkout 79354e14a4b41ff9019f4a5ebd12cfa498917182             && \
    protoc object_detection/protos/*.proto --python_out=.               && \
    cp object_detection/packages/tf2/setup.py .                         && \
    /opt/conda/bin/pip install --no-cache-dir tf-models-official==2.8   && \
    /opt/conda/bin/pip install --use-feature=in-tree-build .
    # /opt/conda/bin/pip install .



FROM armory-base AS armory-local

WORKDIR /armory-repo

COPY pyproject.toml setup.py pytest.ini /armory-repo/
COPY ./.git /armory-repo/.git
COPY ./armory /armory-repo/armory/
COPY ./tests /armory-repo/tests/
COPY ./scenario_configs /armory-repo/scenario_configs/


RUN echo "Installing ART" && \
    /opt/conda/bin/pip install --no-cache-dir adversarial-robustness-toolbox==1.10.3 && \

    echo "Updating Base Image"          && \
    pip install hatch hatch-vcs         && \
    python -m pip install --upgrade pip && \

    echo "Updating Base Image"            && \
    pip install hatch hatch-vcs           && \
    python -m pip install --upgrade pip   && \

    echo "Building Armory from local source" && \
    # Currently ALL versioning methods rely on the `.git` directory being
    # present. Alternatively, one could patch `pyproject.toml` to use
    # `__about__.py` in the local armory directory.
    # sed -i 's/source = "vcs"/#source = "vcs"/g' pyproject.toml  && \
    pip install --no-cache-dir --no-compile '.[host]' && \
    armory configure --use-default

WORKDIR /workspace
